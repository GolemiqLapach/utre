internal class Display
    {
        private ProductBusiness productBusiness=new ProductBusiness();
        private void Show()
        {
            Console.WriteLine(new string('-',40));
            Console.WriteLine(new string(' ',18)+"Menu"+new string(' ',18));
            Console.WriteLine(new string('-',40));
            Console.WriteLine("1. List All entries");
            Console.WriteLine("2. Add new entry");
            Console.WriteLine("3. update entry");
            Console.WriteLine("4. Fetch entry by ID");
            Console.WriteLine("5. Delete entry by ID");
            Console.WriteLine("6. Exit");
        }
        public void Input()
        {
            var operation = -1;
            do
            {
                Show();
                operation = int.Parse(Console.ReadLine());
                switch (operation)
                {
                    case 1: ListAll(); break;
                    case 2: Add(); break;
                    case 3: Update(); break;
                    case 4: Fetch(); break;
                    case 5: Delete(); break;
                    default: break;
                }
            }
            while (operation != 6);
        }
        public Display()
        {
            Input();
        }
        private void Add()
        {
            Product product=new Product();
            Console.WriteLine("Enter name");
            product.Name= Console.ReadLine();
            Console.WriteLine("Enter price");
            product.Price=decimal.Parse(Console.ReadLine());
            Console.WriteLine("Enter Stock");
            product.Stock=int.Parse(Console.ReadLine());
            productBusiness.Add(product);
        }
        public void ListAll()
        {
            Console.WriteLine(new string('-',40));
            Console.WriteLine(new string(' ',16)+"Menu"+new string(' ',16));
            Console.WriteLine(new string('-',40));
            List<Product> products = productBusiness.GetAll();
            foreach(var item in products)
            {
                Console.WriteLine("{0}  {1} {2} {3}",item.Id,item.Name,item.Name,item.Stock);
            }
        }
        private void Update()
        {
            Console.WriteLine(" Enter ID to update");
            int id = int.Parse(Console.ReadLine());
            Product product = productBusiness.Get(id);
            if(product != null)
            {
                Console.WriteLine(" Enter name: ");
                product.Name= Console.ReadLine();
                Console.WriteLine("Enter price: ");
                product.Price=decimal.Parse(Console.ReadLine());
                Console.WriteLine("Enter stock: ");
                product.Stock= int.Parse(Console.ReadLine());
                productBusiness.Update(product);
            }
            else Console.WriteLine("Product is not found");
        }
        private void Fetch()
        {
            Console.WriteLine("Enter ID to fetch");
            int id=int.Parse(Console.ReadLine());
            Product product = productBusiness.Get(id);
            if(product != null )
            {
                Console.WriteLine("ID: "+product.Id);
                Console.WriteLine("Name: "+product.Name);
                Console.WriteLine("Price: "+product.Price);
                Console.WriteLine("Stock: "+product.Stock);
            }
            else Console.WriteLine("Product is not found");
        }
        private void Delete()
        {
            Console.WriteLine("Enter ID to delete");
            int id=int.Parse(Console.ReadLine());
            productBusiness.Delete(id);
            Console.WriteLine("Done");
        }
    }
________________________________________________________________________________________________________
internal class ProductData
    {
        public List<Product> GetAll()
        {
            var productList=new List<Product>();
            SqlConnection con=Database.GetConnection();
            con.Open();
            using (con)
            {
                SqlCommand command = new SqlCommand();
                command.Connection= con;
                command.CommandText = "Select*from product";
                SqlDataReader reader = command.ExecuteReader();
                using(reader)
                {
                    while (reader.Read())
                    {
                        Product product = new Product((int)reader.GetValue(0), (string)reader.GetValue(1), (decimal)reader.GetValue(2), (int)reader.GetValue(3)) ;
                        productList.Add(product);
                    }
                }
            }
            con.Close();
            return productList;
        }
        public Product Get(int id)
        {
            Product product=null;
            SqlConnection con=Database.GetConnection();
            con.Open();
            using (con)
            {
                SqlCommand command = new SqlCommand();
                command.Connection= con;
                command.CommandText = " Select * from product where id=@id";
                command.Parameters.AddWithValue("@id", id);
                SqlDataReader reader=command.ExecuteReader();
                using(reader)
                {
                    if (reader.Read())
                    {
                        product=new Product((int)reader.GetValue(0),(string)reader.GetValue(1),(decimal)reader.GetValue(2),(int)reader.GetValue(3)) ;
                    }
                }
            }
            con.Close();
            return product;
        }
        public void Add(Product product)
        {
            var con=Database.GetConnection();
            using (con)
            {
                con.Open();
                var command=new SqlCommand("Insert into product(name,price,stock)values(@name,@price,@stock)",con);
                command.Parameters.AddWithValue("@name", product.Name);
                command.Parameters.AddWithValue("@price", product.Price);
                command.Parameters.AddWithValue("@stock", product.Stock);
                command.ExecuteNonQuery();
                con.Close();
            }
        }
        public void Update(Product product)
        {
            var con=Database.GetConnection();
            using (con)
            {
                con.Open();
                var command = new SqlCommand("Update product set name=@name,price=@price,stock=@stock where id=@id", con);
                command.Parameters.AddWithValue("@id",product.Id);
                command.Parameters.AddWithValue("@name", product.Name);
                command.Parameters.AddWithValue("@price", product.Price);
                command.Parameters.AddWithValue("@stock", product.Stock);
                command.ExecuteNonQuery();
                con.Close();
            } 
            
        }
        public void Delete(int id)
        {
            var con=Database.GetConnection();
            using (con)
            {
                con.Open();
                var command = new SqlCommand("Delete from product wehere id=@id", con);
                command.Parameters.AddWithValue("@id", id);
                command.ExecuteNonQuery();
                con.Close();
            }
        }

    }
____________________________________________________________________________________________________________________________
internal class Database
    {
        private static string connectionString = "Data source=DESKTOP-N1IRH72;database=shop1;integrated security=true";
        public static SqlConnection GetConnection()
        {
            return new SqlConnection(connectionString);
        }
    }
____________________________________________________________________________________________________________________________
internal class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public decimal Price { get; set; }
        public int Stock { get; set; }
        public Product()
        {

        }
        public Product(int id,string name,decimal price,int stock)
        {
           Id= id;
            Name= name;
            Price= price;
            Stock= stock;
        }
    }
____________________________________________________________________________________________________________________________
internal  class ProductBusiness
    {
        private ProductData manager = new ProductData();
        public  List<Product> GetAll()
        {
            return manager.GetAll();
        }
        public Product Get(int id) 
        {
          return manager.Get(id);
        }
        public void Add(Product product)
        {
            manager.Add(product);
        }
        public  void Update(Product product)
        {
            manager.Update(product);
        }
        public void Delete(int id)
        {
            manager.Delete(id);
        }
    }
___________________________________________________________________________________________________________________________
internal class Program
    {
        static void Main(string[] args)
        {
            Display obj=new Display();
        }
    }